//Creative Coding Final by Shipon Eunus
// declaring variables
let spacegreenpurple; 
let angel;
let beam;
let four;
let theta=0;
let time;
let mcq;
let surroundvsion;
let seven;
let portal;
let five;
let one;
let eight; 
let angel1;
let angel2;
let song;
let gate;
let angel3;
let angel6;
let angel7;
let room;
let time2;
let floatingrock;
let building3;
let beach;
let hudson1;
let hudson2;
let beam2;
let offset = 0;
let easing = 0.05;
let midsky;
let me;
let font1, font2,font3,font4, font5, font6, font7;
//preloads images, font, sound
function preload() {
song = loadSound('NeonBlack.mp3');
	spacegreenpurp = loadImage('spacegreenpurple.png');
angel = loadImage('angelpinkbluegreenchrome.png');
beam = loadImage('BEAMOG.png');
	beam2 = loadImage('beamtower2.png');
	four = loadImage('yinyangyen.png');
  mcq = loadImage('Poster7.png');
	surroundvision = loadImage('surroundvsionV1.png');
	six =loadImage('7paradise.png');
	seven = loadImage('7concreteredwirfeame.png');
	portal= loadImage('portal.jpg');
	five = loadImage('CVLBAUHAUS3d.png');
	one = loadImage('Building1.png');
	eight = loadImage('eightbuilding.png');
	angel2 = loadImage('angelpinkbluegreenchromeleft.png');
	gate = loadImage('heavengate.jpg');
	angel3 = loadImage('angelpink_bluechromev13d.png');
	angel6 = loadImage('angel6.png');
	angel7 = loadImage('angel7.png');
	room = loadImage('MASTERPIECEV1.png');
	heatmap = loadImage('natureheatmap.png');
	natureog = loadImage('NATUREOG.png');
	mountain = loadImage('MOUNTAINCVL.jpg')
	floatingrock = loadImage('floatingrock3d1.png');
	building2 = loadImage('building2.png');
	building3 = loadImage('CvlPalacev1.png');
	beach = loadImage('beach.jpg');
	hudson1 = loadImage('hudsonv4.jpg');
	hudson2 = loadImage('hudsonv2.jpg');
	midsky = loadImage('midsky.png');
	spiked = loadFont('KilnSansSpiked.otf');
	helvetica = loadFont('Helvetica_CE_Bold_Oblique.otf');
	me = loadImage('mebapekawskapitalnikeyeezy.png');
	font1 =loadImage('shiponeunusfonts1.png');
	font2 =loadImage('shiponeunusfonts2.png');
	font3 =loadImage('shiponeunusfonts3.png');
	font4 =loadImage('shiponeunusfonts4.png');
	font5 =loadImage('shiponeunusfonts5.png');
	font6 =loadImage('shiponeunusfonts6.png');
	font7 =loadImage('shiponeunusfonts7.png');
}
// creates canvas, creates object, starts playing song immediately when program starts
function setup() {
	createCanvas(windowWidth,windowHeight, WEBGL);
	background(0);
	imageMode(CENTER);
  angel1 = new Angel();
	angel2 = new Angel();
	angel3 = new Angel();
	angel4 = new Angel();
	angel5 = new Angel();
	angel6 = new Angel();
	song.setVolume(7);
	song.play();
}

function draw() {

// stores amount of milliseconds passed, in variable
time = millis();
// stores amount of seconds passed, in variable
time2 = time/1000;
let s = second();
let m = minute();
	
 //onearth();
// sky();
 //inspace();
 //cameo();
 //gates();
 heaven(); 

// credit();
/*	
// angel sees beam and goes toward it 
if(s >= 0 && s <15){
push();
onearth();
pop();}
//angel goes up the beam 
else if(s >= 15 && s< 21){
	push();
	sky(); 
pop();}
//angel follows beam and ends up in space
else if(s >= 21 && s< 32){
	push();
	inspace();
pop();}
//angel continues up the beam and find local resident
else if(s >= 32 && s< 41){	
	push();
	cameo();
pop();}
// angel is finally at the end of beam and discovers an interesting place
else if(s >= 41 && s<59){
	push();
gates();	
pop();}
	// angel discovers and explores this new world
else if(m >=0 && m< 2.25){
	push();
	heaven();
pop();}
	// credit scene
else if(m >= 2.25 && m < 2.5){
	push();
	credit();
pop();}
*/
}

function onearth(){
push();
// image of personal photography from canon camera	
scale(0.26, 0.2);
image(hudson1, 0,0);	
pop();
push();
// creates another image of personal photography but with 50% opacity and an offset movement
//variable that stores random value from the window width size
let movement = random(-windowWidth, windowWidth);
// variables update the offset distance
let dx = movement - windowWidth / 2 - offset
offset += dx * easing;
// creates 50% opacity with no change in color
tint(255, 100);
scale(0.36, 0.2);
// creates image that moves from side to side
image(hudson1, offset, 0)	
pop();
	push();
scale(0.5,0.7);
image(beam2,1280, -261);
	pop();
	// uses created object and methods to show image and move image
push();
	angel1.display3();
angel1.update3();
	pop();
}

function sky(){
// loads image of sky 
	image(midsky, 0,0);
push();
	// loads image of beam
	scale(0.25, 0.17);
	image(beam,0, 0);
pop();
push();
// uses created object and methods to show image and move image
angel2.display();
angel2.update();
	pop();
}

function inspace(){
push();
	image(spacegreenpurp, 0, 0 , windowWidth, windowHeight);
	pop();
push();
	scale(0.12, 0.17);
	image(beam,0, 0);
pop();
//creation of planets and their motions
	push();
	scale(0.2);
image(floatingrock, 0,320);
	pop();
	push();
	scale(0.45);
	image(building2, 350, -190);
	pop();
push();
	scale(0.1);
	image(building3, -1380, -790);
pop();
push();
scale(0.13);
image(five, -30,-800);
pop();
	push();
  rotateX(time/550);
	rotateZ(time/550);
	texture(portal);
	 translate(220, -100, -100); //rotates translations
	sphere(100);
  pop();
push();
	rotateZ(time/550);
	scale(0.15);
image(seven, 1500, -1300);
	pop();
	push();
	rotateY(time/400);
rotateX(time/900);
scale(0.2);
image(one, 2000, -1000);	
pop();
push();
	rotateX(time/800);
	rotateZ(time/450);
	scale(0.16);
  image(eight,0,-1000);
	pop();
//object and methods used to move angel upwards
	push();
scale(0.45);
angel3.display();
angel3.update();
	pop();
}

function cameo(){
push();
	scale(1.15);
	image(room,0,0);
pop();
	push();
	scale(0.2);
	image(me, -900,-50);
pop();
	push();
	scale(0.14);
 image(beam,300,0);
pop();
	push();
	angel4.display();
	angel4.update();
pop();
}

function gates(){
	//scale(0.9);
	push();
	scale(0.8+ time2/20);
	scale(0.85, 0.4);
	image(gate, 0, 0);
	pop();

	scale(0.7);
	translate(-50, 0);
	push();
	scale(0.01 + time2/23);
	image(six,0,0);
	pop();
	push();
	angel5.display();
	angel5.update4();
	pop(); 
}

function heaven(){
let u = random( 2000, 3000);
push();
let o = random( 900, 1500);
rotateY(time/o);	
scale(2.2,1.5);
image(mountain,150,0); 
pop();
	
push();
let y = random( 1700, 3000);	
rotateX(time/y);	
scale(1.8);
image(heatmap, 0,0);
pop(); 

push();
rotateZ(time/u);
//	r = r = random( 200, 5000);
scale(1.7);
image(natureog,0,0);
pop();

//image(angel, -300, 0);
/*	
push();
rotateY(time/r);
translate( -100, 150);
scale(2.5, 1.5);
image(beach, 0,0);
pop();*/
//image(angel, -1000, 0);


}	

function credit(){
	//aligns text
	textAlign(RIGHT);
	// creates a marker
	push();
	//rotates on y axis to form a more generative design
	rotateY(time2/20);
	// random values are assigned to variables
	let r = random(0,255);
	let g = random(0,255);
	let b = random(0,255);
	// random values are passed to the fill RGB values
	fill(r,g,b);
	// sets font
	textFont(helvetica);
	//sets text size
	textSize(24);
	// text of different roles
  text('Director', -200, -130);
	text('Screenwriter', -200, -100);
	text('Producer', -200, -70);
	text('Reference Curator', -200, 0);
	text('Soundscape Designer', -200, 70);
	text('Photographer', -200,100);
	text('Graphic Designer', -200, 130);
	// end of marker and resets from push();
	pop();
	// the main individual's name, responsible for each role, is listed one by one
	push();
	// changes size of uploaded image
  scale(0.5);
	image(font1,400, 0);
	image(font2,400, 0);
	image(font3,400, 0);
	image(font4,400, 0);
	image(font5,400, 0);
	image(font6,400, 0);
	image(font7,400, 0);
	pop();
}

// creates angel and movement 
class Angel{
	constructor(){
	  this.position = createVector(30,windowHeight);
		this.position2 = createVector(30,-50);
    this.velocity = createVector();
    this.acceleration = createVector();
    this.topspeed = 6;
	}
	update(){
		  var mouse = createVector(0,-1000);
			this.acceleration = p5.Vector.sub(mouse, this.position);
		  //this.topspeed = 10;
		//	this.acceleration.setMag(0.4); 
		//	this.acceleration.mult(random(2));	
		
	this.velocity.add(this.acceleration);
		this.velocity.limit(this.topspeed);
    this.position.add(this.velocity);	
	}
	update2(){
		var mouse = createVector(1000,0);
		this.acceleration = p5.Vector.sub(mouse, this.position);
		this.velocity.add(this.acceleration);
		this.velocity.limit(this.topspeed);
    this.position.add(this.velocity);
	}
		update3(){
		this.topspeed = 8;
		var mouse = createVector(windowWidth+300,-1000);
	
		this.acceleration = p5.Vector.sub(mouse, this.position2);
		this.velocity.add(this.acceleration);
		this.velocity.limit(this.topspeed);
    this.position2.add(this.velocity);
	}
	update4(){
		var mouse = createVector(0,0);
	
		this.acceleration = p5.Vector.sub(mouse, this.position);
		this.velocity.add(this.acceleration);
		this.velocity.limit(this.topspeed);
    this.position.add(this.velocity);
	}	
	display(){
	image(angel, this.position.x, this.position.y);
	}
  display2(){
	//creates new set of angels used during gates function
	translate(-90,0);
	scale(0.45);
	push();
	rotate(-160);
	image(angel3,1000 ,-100);
	pop();
	push();
	rotate(85);
	image(angel6,-400,700);
	pop();
	image(angel7,500,600);
}
	display3(){
		scale(0.45);
		image(angel,this.position2.x ,this.position2.y);
	}
}